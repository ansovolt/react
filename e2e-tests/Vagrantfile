VAGRANTFILE_API_VERSION = "2"

ENV['VAGRANT_DEFAULT_PROVIDER'] = 'docker'

require 'yaml'


subsystems = ['item']

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.ssh.insert_key = false
  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.define "ecommerce-eventstore" do |es|
    es.vm.provider "docker" do |docker|

      # docker.force_host_vm = true
      # docker.vagrant_vagrantfile = "./host/Vagrantfile"

      docker.name     = "ecommerce-eventstore"
      docker.image    = "ruudud/eventstore:3.4.0"
      docker.ports    = ['2113:2113', '1113:1113']
    end
  end

  config.vm.define "ecommerce-view-store" do |vs|
    vs.vm.provider "docker" do |docker|

      # docker.force_host_vm = true
      # docker.vagrant_vagrantfile = "./host/Vagrantfile"
	  
	  
      docker.name     = "ecommerce-view-store"
      docker.image    = "postgres"
      docker.ports    = ['5432:5432']
    end
  end

  config.vm.define "item" do |itm|
    itm.vm.provider "docker" do |docker|
	itm.vm.synced_folder ".", "/vagrant", disabled: true
      docker.name     = "item-read-back"      
	  docker.build_dir = "../item/read-back/target/docker/stage"
	  docker.create_args = ['--net=host']
	  
    end
  end

#  subsystems.each do |subsystem|
#    containers = YAML.load_file("../" + subsystem + '/containers.yml')
#
#    containers.each do |container|
#      config.vm.define container["name"] do |cntnr|
#
#        # Disable synced folders for the Docker container (prevents an NFS error on "vagrant up")
#        cntnr.vm.synced_folder ".", "/vagrant", disabled: true
#		
#        cntnr.vm.provider "docker" do |docker|
#
#          port = container["port"]
#          role = container["role"]
#
#          docker.name = container["name"]
#
#          docker.build_dir = "../" + subsystem + "/" + role + "/target/docker/stage"
#          docker.create_args = ['--net=host']
#
#          if port
#            docker.ports = [port.to_s + ":" + port.to_s]
#          end
#
#          if role == "write-back"
#            docker.env = {"APP_CLUSTER_SEED" => "akka.tcp://ecommerce@127.0.0.1:9401", "APP_HOST" => "127.0.0.1"}
#           end
#        end
#      end
#    end
#  end

  # triggers (https://github.com/emyl/vagrant-triggers)

  config.trigger.after :up, :vm => ["ecommerce-eventstore"] do
    info "Enabling system projections"
    sleep(5)
    #run "curl -v -u admin:changeit --data '' 'http://localhost:2113/projection/$by_category/command/enable'"

    #info "Installing user projections"
    #run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../headquarters/write-back/src/main/resources/projections/clock.js http://127.0.0.1:2113/projections/continuous?name=clock_proj&type=JS&emit=1"
    #run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../headquarters/write-back/src/main/resources/projections/current-deadlines.js http://127.0.0.1:2113/projections/continuous?name=current_deadlines_proj&type=JS&emit=1"
    #run "curl -v -H 'Content-Type: application/json' -u admin:changeit --data @../headquarters/write-back/src/main/resources/projections/order-process.js http://127.0.0.1:2113/projections/continuous?name=order_process_proj&type=JS&emit=1"
  end

end